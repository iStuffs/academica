/** initialize css counter */
ol.academica, ol.academica ol  {
  list-style-type: none;
}
ol.academica  {
  counter-reset: ol1;
}

ol.academica > li, .ol1 > li {
  counter-reset: ol2;
}

ol.academica>li>ol>li, .ol2>li {
  counter-reset: ol3;
}

ol.academica>li>ol>li>ol>li, .ol3>li {
  counter-reset: ol4;
}

ol.academica>li>ol>li>ol>li>ol>li, .ol4>li {
  counter-reset: ol5;
}

ol.academica>li>ol>li>ol>li>ol>li>ol>li, .ol5>li  {
  counter-reset: ol6;
}
ol.academica>li>ol>li>ol>li>ol>li>ol>li>ol>li, .ol6>li {
  counter-reset: ol7;
}

/** put counter result into headings */
ol.academica>li::before, .ol1>li::before {
  counter-increment: ol1;
  content: counter(ol1, upper-roman) ". ";
}

ol>li>ol>li::before, .ol2>li::before {
  counter-increment: ol2;
  content: counter(ol1, upper-roman) ". " counter(ol2, upper-alpha) ". "
}

ol>li>ol>li>ol>li::before, .ol3>li::before {
  counter-increment: ol3;
  content: counter(ol1, upper-roman) ". " counter(ol2, upper-alpha) ". " counter(ol3, decimal) ". "
}

ol>li>ol>li>ol>li>ol>li::before, .ol4>li::before {
  counter-increment: ol4;
  content: counter(ol1, upper-roman) ". " counter(ol2, upper-alpha) ". " counter(ol3, decimal) ". " counter(ol4, lower-alpha) ") ";
}

ol>li>ol>li>ol>li>ol>li>ol>li::before, .ol5>li::before {
  counter-increment: ol5;
  content: counter(ol1, upper-roman) ". " counter(ol2, upper-alpha) ". " counter(ol3, decimal) ". " counter(ol4, lower-alpha) ") " "(" counter(ol5, decimal) ") ";
}

ol>li>ol>li>ol>li>ol>li>ol>li>ol>li::before, .ol6>li::before {
  counter-increment: ol6;
  content: counter(ol1, upper-roman) ". " counter(ol2, upper-alpha) ". " counter(ol3, decimal) ". " counter(ol4, lower-alpha) ") " "(" counter(ol5, decimal) ") " "("counter(ol6, lower-alpha) ") ";
}

ol>li>ol>li>ol>li>ol>li>ol>li>ol>li>ol>li::before, .ol7>li::before {
  counter-increment: ol7;
  content: counter(ol1, upper-roman) ". " counter(ol2, upper-alpha) ". " counter(ol3, decimal) ". " counter(ol4, lower-alpha) ") " "(" counter(ol5, decimal) ") " "("counter(ol6, lower-alpha) ") " "("counter(ol6, lower-roman) ") ";
}

/** initialize css counter */
body {
  counter-reset: h1;
}

h1, .h1 {
  counter-reset: h2;
}

h2, .h2 {
  counter-reset: h3;
}

h3, .h3 {
  counter-reset: h4;
}

h4, .h4 {
  counter-reset: h5;
}

h5, .h5 {
  counter-reset: h6;
}
h6, .h6 {
  counter-reset: h7;
}

/** put counter result into headings */
h1::before, .h1::before {
  counter-increment: h1;
  content: counter(h1, upper-roman) ". ";
}

h2::before, .h2::before {
  counter-increment: h2;
  content: counter(h1, upper-roman) ". " counter(h2, upper-alpha) ". ";
}

h3::before, .h3::before {
  counter-increment: h3;
  content: counter(h1, upper-roman) "." counter(h2, upper-alpha) ". " counter(h3, decimal) ". ";
}

h4::before, .h4::before {
  counter-increment: h4;
  content: counter(h1, upper-roman) "." counter(h2, upper-alpha) ". " counter(h3, decimal) ". " counter(h4, lower-alpha) ") ";
}

h5::before, .h5::before {
  counter-increment: h5;
  content: counter(h1, upper-roman) "." counter(h2, upper-alpha) ". " counter(h3, decimal) ". " counter(h4, lower-alpha) ") " "(" counter(h5, decimal) ") ";
}

h6::before, .h6::before {
  counter-increment: h6;
  content: counter(h1, upper-roman) "." counter(h2, upper-alpha) ". " counter(h3, decimal) ". " counter(h4, lower-alpha) ") " "(" counter(h5, decimal) ") " "("counter(h6, lower-alpha) ") ";
}
.h7::before {
  counter-increment: h7;
  content: counter(h1, upper-roman) "." counter(h2, upper-alpha) ". " counter(h3, decimal) ". " counter(h4, lower-alpha) ") " "(" counter(h5, decimal) ") " "("counter(h6, lower-alpha) ") " "("counter(h7, lower-roman) ") ";
}
